const {
  fetchSearchData,
  findMostCommonCategory,
  getCategoryPath,
} = require("../helpers/searchService");

async function searchItems(req, res) {
  const q = req.query.q;

  if (!q) {
    return res.status(400).send({ error: "Missing query parameter" });
  }

  if (q.length > 100) {
    return res.status(400).send({
      error: "Query parameter exceeds maximum length of 100 characters",
    });
  }

  try {
    const response = await fetchSearchData(q);
    const mostCommonCategoryId = findMostCommonCategory(response.data.results);
    const categoryPath = getCategoryPath(
      response.data.filters,
      mostCommonCategoryId
    ).map((category) => category.name);

    const transformedData = {
      author: {
        name: "Matias",
        lastname: "Vazquez de la Colina",
      },
      categories: categoryPath,
      items: response.data.results.map((item) => ({
        id: item.id,
        title: item.title,
        price: {
          currency: item.currency_id,
          amount: Math.floor(item.price),
          decimals: +(item.price % 1).toFixed(2).substring(2),
        },
        picture: item.thumbnail,
        condition: item.condition,
        free_shipping: item.shipping.free_shipping,
      })),
    };

    res.json(transformedData);
  } catch (error) {
    console.error("An error occurred while retrieving search results:", error);
    res.status(500).send("Error retrieving data from Mercado Libre");
  }
}

module.exports = { searchItems };
